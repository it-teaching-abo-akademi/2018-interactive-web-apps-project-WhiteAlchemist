{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","components/hello.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","Boolean","window","location","hostname","match","Stock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isSelected","state","selected","setState","index","console","log","remove","deleteStock","name","unit_value","parseFloat","toFixed","quantity","total_value","react_default","a","createElement","type","onChange","React","Portfolio","_this2","addStock","symbol","refs","stock_symbol","value","stocks_number","shares","Number","isInteger","axios","get","then","res","undefined","data","prices","price","arr","stocks","symbol_exists","parseInt","length","stock","push","alert","popup","style","display","sum","updateStorage","catch","error","changeToEuro","currency_symbol","innerHTML","lbleuro","background","lblusd","rate","changeToUSD","i","splice","storage","JSON","parse","localStorage","getItem","children","setItem","stringify","deleteStocks","selectedItems","sort","close","stocksSum","s","total","deletePortfolio","renderNormal","className","onClick","ref","border","map","eachStock","assertThisInitialized","placeholder","required","editing","text","hello_Stock","key","renderForm","Board","_this3","add","portfolio_name","portfolios","portfolio","removePortfolio","init","hello_Portfolio","padding","bind","eachPortfolio","Hello","hello_Board","ReactDOM","render","hello","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc66b4c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport \"./portfolio.css\"\nimport axios from 'axios'\n\n\nclass Stock extends  React.Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            name: this.props.name,\n            unit_value: parseFloat(this.props.unit_value).toFixed(2),\n            quantity: this.props.quantity,\n            total_value: parseFloat(this.props.quantity)*parseFloat(this.props.unit_value),\n            selected: false\n        }\n    }\n\n    isSelected = () =>\n    {\n        var isSelected = this.state.selected;\n        isSelected = !isSelected;\n        this.setState({selected: isSelected});\n        this.props.selected(this.props.index);\n        console.log(\"you selected me!\" + this.props.index)\n    };\n\n    remove = () =>\n    {\n        console.log(\"I am removing stock with index: \"+this.props.index);\n        this.props.deleteStock(this.props.index)\n\n    };\n\n    render()\n    {\n        return (\n         <tr>\n           <td>{this.state.name}</td>\n           <td>{this.state.unit_value}</td>\n           <td>{this.state.quantity}</td>\n           <td>{this.state.total_value.toFixed(2)}</td>\n           <td><input type={'radio'} onChange={this.isSelected}/></td>\n         </tr>\n        )\n    }\n    }\n\n\nclass Portfolio extends React.Component{\n\n    constructor(props)\n    {\n        super(props);\n\n        let sum = () =>{\n            let stocksSum = 0.0;\n            let stocks = this.props.stocks;\n            console.log(stocks);\n            for(let s in stocks)\n            {\n                stocksSum = stocksSum + stocks[s]['unit_value']*stocks[s]['quantity']\n            }\n\n            return parseFloat(stocksSum).toFixed(2);\n        };\n\n        this.state = {\n            editing: false,\n            selected: [],\n            stocks: this.props.stocks,\n            total: sum()\n        }\n    }\n\n    addStock = () =>\n    {\n\n        let symbol = this.refs.stock_symbol.value\n        let stocks_number = this.refs.shares.value\n\n        if(!Number.isInteger(parseFloat(stocks_number)))\n        {\n            alert(\"Number of shares should be an integer!\")\n            return\n        }\n\n        if(symbol == \"\")\n        {\n            alert(\"Stock symbol cannot be left empty!\")\n            return\n        }\n\n        axios.get('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol='+symbol+'&apikey=YWH47VG0N6XC0JBI').then(\n            res => {\n\n                if (res.data['Error Message'] != undefined )\n                {\n                    alert(\"Unknown stock symbol!\")\n                    return\n                }\n\n                let prices = res.data['Time Series (Daily)']\n                let price = 0\n\n                // Here we take the latest price of the stock\n                for (let a in prices)\n                {\n                    price = prices[a]['4. close']\n                    console.log(price)\n                    break\n                }\n\n                var arr = this.state.stocks;\n\n                let symbol_exists = false;\n\n                for (let a in arr)\n                {\n                    if(arr[a]['name'] == symbol)\n                    {\n                        symbol_exists = true\n                        arr[a]['quantity'] = parseInt(arr[a]['quantity']) + parseInt(stocks_number)\n                    }\n                }\n\n                if (!symbol_exists && arr.length <= 50)\n                {\n\n                    let stock = {name: symbol, unit_value: price, quantity: stocks_number}\n                    arr.push(stock)\n                }\n                else if(arr.length > 50)\n                {\n                    alert(\"You cannot add more than 50 symbols in one portfolio!\")\n                    return\n                }\n\n                this.setState({stocks: arr})\n\n                this.refs.popup.style.display = \"none\";\n\n                this.sum()\n\n                this.updateStorage()\n\n            }).catch(error=>{alert(\"Unknown stock symbol!\")})\n    }\n    changeToEuro = () =>\n    {\n        if (this.refs.currency_symbol.innerHTML == '€')\n        {\n            this.refs.lbleuro.style.background = 'yellow'\n            this.refs.lblusd.style.background = 'lightgrey'\n            return\n        }\n        else\n        {\n            axios.get('https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=USD&to_currency=EUR&apikey=YWH47VG0N6XC0JBI').then(\n                res => {\n                    let rate = res.data['Realtime Currency Exchange Rate']['5. Exchange Rate']\n                    console.log(res.data['Realtime Currency Exchange Rate']['5. Exchange Rate'])\n                    var arr = this.state.stocks;\n                    for(let a in arr)\n                    {\n                        arr[a]['unit_value'] = parseFloat(arr[a]['unit_value']*rate).toFixed(2)\n                    }\n                    this.refs.currency_symbol.innerHTML = '€'\n                    this.setState({stocks: arr})\n                    console.log(this.state.stocks)\n                    this.sum()\n                    this.refs.lbleuro.style.background = 'yellow'\n                    this.refs.lblusd.style.background = 'lightgrey'\n                }).catch(error => {alert(\"Currency Exchange error!\")})\n        }\n    }\n\n    changeToUSD = () =>\n    {\n        if (this.refs.currency_symbol.innerHTML == '$')\n        {\n            this.refs.lbleuro.style.background = 'lightgrey'\n            this.refs.lblusd.style.background = 'yellow'\n            return\n        }\n        else\n        {\n            axios.get('https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=EUR&to_currency=USD&apikey=YWH47VG0N6XC0JBI').then(\n                res => {\n                    let rate = res.data['Realtime Currency Exchange Rate']['5. Exchange Rate']\n                    console.log(res.data['Realtime Currency Exchange Rate']['5. Exchange Rate'])\n                    var arr = this.state.stocks;\n                    for(let a in arr)\n                    {\n                        arr[a]['unit_value'] = parseFloat(arr[a]['unit_value']*rate).toFixed(2)\n\n                    }\n                    this.refs.currency_symbol.innerHTML = '$'\n                    this.setState({stocks: arr})\n                    console.log(this.state.stocks)\n                    this.sum()\n\n                    this.refs.lbleuro.style.background = 'lightgrey'\n                    this.refs.lblusd.style.background = 'yellow'\n                }).catch(error=>{alert(\"Currency Exchange error!\")})\n        }\n    }\n\n    deleteStock = (i) => {\n\n        console.log(\"Removing stock: \"+i);\n        var arr = this.state.stocks;\n        arr.splice(i,1);\n        this.setState({stocks: arr})\n\n    };\n\n    updateStorage = () =>\n    {\n        let storage = JSON.parse(localStorage.getItem('portfolios'))\n\n        for (let a in storage)\n        {\n            if (storage[a]['name'] == this.props.children)\n            {\n                storage[a]['stocks'] = this.state.stocks\n                break\n            }\n        }\n        localStorage.setItem('portfolios', JSON.stringify(storage))\n    }\n\n    deleteStocks = () =>\n    {\n        let selectedItems = this.state.selected.sort();\n        console.log(\"this items to remove\");\n        console.log(selectedItems);\n        let stocks = this.state.stocks;\n        for (let a in selectedItems)\n        {\n            //stocks.splice(selectedItems[a]-a,1)\n            this.deleteStock(selectedItems[a]-a);\n            console.log(\"removed: \"+selectedItems[a])\n        }\n\n        this.updateStorage()\n        this.setState({selected: []})\n\n        this.sum()\n\n    }\n\n    close = () =>\n    {\n        this.refs.popup.style.display = \"none\";\n    }\n\n    sum = () =>{\n        let stocksSum = 0.0\n        let stocks = this.state.stocks\n        for(let s in stocks)\n        {\n            stocksSum = stocksSum + stocks[s]['unit_value']*stocks[s]['quantity']\n        }\n\n        this.setState({total: parseFloat(stocksSum).toFixed(2)});\n        console.log('total is: ' +this.state.total)\n    }\n\n    remove = () =>\n    {\n        this.props.deletePortfolio(this.props.index)\n    };\n\n    selected = (i) => {\n        let arr = this.state.selected\n        arr.push(i)\n        this.setState({selected: arr})\n        console.log('Items selected'+arr)\n    }\n\n    eachStock(text,i)\n    {\n        return (\n            <Stock key={text['name']+text['unit_value']+text['quantity']} index={i}\n                         name={text['name']} unit_value={text['unit_value']} quantity={text['quantity']}\n                        selected={this.selected} remove={this.deleteStock}>\n            </Stock>\n        )\n    }\n\n    popup = () =>\n    {\n        this.refs.popup.style.display = \"block\";\n    }\n\n   renderNormal = () =>\n    {\n        const style = {\n            border_bottom: '1px solid #ddd'\n        };\n        return (\n            <div className={'portfolio'}>\n\n                <a  onClick={this.remove} className=\"close-thik\"></a>\n                <p/><p/><br/>\n\n                <div> {this.props.children}\n                    <div className={'divider'}></div>\n                    <label onClick={this.changeToEuro} ref=\"lbleuro\">Show in €</label>\n                    <div className={'divider'}></div>\n                    <label onClick={this.changeToUSD} ref='lblusd'>Show in $</label>\n                </div>\n                <p/>\n                <br/>\n\n              <table style={{border: '1px solid black'}}>\n                  <tbody>\n                  <tr style={{border: '1px solid black'}}>\n                      <th>Name</th>\n                      <th>Unit value</th>\n                      <th>Quantity</th>\n                      <th>Total value</th>\n                      <th>Select</th>\n                  </tr>\n                    {\n                        this.state.stocks.map(this.eachStock,this)\n                    }\n                  </tbody>\n              </table>\n                <p/>\n                <p>Total value of {this.props.children} is {this.state.total} <span ref='currency_symbol'>$</span></p>\n                <button onClick={this.popup}>Add Stock</button>\n                <div className={'divider'}></div>\n                <button>Perf graph</button>\n                <div className={'divider'}></div>\n                <button onClick={this.deleteStocks}>Remove selected</button>\n\n                <div ref=\"popup\" className=\"modal\">\n\n                    <div className=\"modal-content\">\n                        <span ref={'close'} className=\"close\" onClick={this.close}>&times;</span>\n                        <h1>Add Stock</h1>\n                        <table style={{border: '1px solid black'}}>\n                            <tbody>\n                            <tr style={{border: '1px solid black'}}>\n                                <td>Stock's symbol</td>\n                                <td> <input type=\"text\" placeholder=\"Sock's symbol\" ref='stock_symbol' required/></td>\n                            </tr>\n                            <tr style={{border: '1px solid black'}}>\n                                <td>Number of shares</td>\n                                <td><input type=\"number\" ref='shares' required/></td>\n                            </tr>\n                            <tr style={{border: '1px solid black'}}>\n                                <td><button type=\"button\" className=\"btn\" onClick={this.addStock}>Add Stock</button></td>\n                                <td></td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n\n  render()\n  {\n      if(this.state.editing)\n      {\n        return this.renderForm()\n      }\n      else\n        return this.renderNormal()\n  }\n}\n\n\nclass Board extends  React.Component{\n\n    constructor(props) {\n\n        super(props);\n\n        let init = []\n        if (localStorage.getItem('portfolios') == null)\n            JSON.parse(localStorage.setItem('portfolios', JSON.stringify([])))\n        else\n            init = JSON.parse(localStorage.getItem('portfolios'))\n\n        this.state = {\n\n            portfolios: init\n        }\n    }\n\n    add = () =>\n    {\n        let name = this.refs.portfolio_name.value\n        let portfolios = this.state.portfolios\n        if(name == '')\n        {\n            alert(\"Name of Portfolio should not be empty!\")\n            return\n        }\n\n        var arr = this.state.portfolios;\n\n        if(arr.length == 10)\n        {\n            alert(\"The maximum number of portofolios that can be created is 10!\")\n            return\n        }\n        for (let i in arr)\n        {\n            if (arr[i]['name'] == name)\n            {\n                alert(\"There is already a portfolio with this name!\")\n                return\n            }\n        }\n\n\n        var portfolio = {name: name, stocks: []};\n        arr.push(portfolio);\n        this.setState({portfolios: arr})\n        localStorage.setItem('portfolios', JSON.stringify(arr))\n    };\n\n    removePortfolio = (i) =>\n    {\n        console.log(\"Removing portfolio \"+i)\n        var arr = this.state.portfolios;\n        arr.splice(i,1)\n        this.setState({portfolios: arr})\n        localStorage.setItem('portfolios', JSON.stringify(arr))\n    }\n\n\n    eachPortfolio(text,i)\n    {\n        //console.log(text['stocks'])\n        return (<Portfolio key={text['name']} index={i}\n                         deletePortfolio={this.removePortfolio}\n                         stocks={text['stocks']}\n                         >{text['name']}</Portfolio>)\n    }\n\n    render ()\n    {\n        if (localStorage.getItem('portfolios') != null)\n            return (\n                <div style={{padding: '2%'}}>\n                    <div className={'head'}>\n                        <table className={'table'}>\n                            <tbody>\n                            <tr>\n                                <td>Portfolio Name:</td><td><input type={'text'} ref='portfolio_name'/></td>\n                                <td><button onClick={this.add.bind(null)}>Add new portfolio</button></td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    {\n                        this.state.portfolios.map(this.eachPortfolio,this)\n                    }\n                </div>\n            )\n        else\n            return(\n                <div style={{padding: '2%'}}>\n                    <div className={'head'}>\n                        <table className={'table'}>\n                            <tbody>\n                            <tr>\n                                <td>Portfolio Name:</td><td><input type={'text'} ref='portfolio_name'/></td>\n                                <td><button onClick={this.add.bind(null)}>Add new portfolio</button></td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <h2 style={{padding: '2%'}}>No portfolio is currently stored!</h2>\n                </div>\n                )\n    }\n}\n\n\n\nclass Hello extends React.Component {\n  render() {\n    return (\n        <div>\n\n            <Board/>\n\n        </div>\n              );\n  }\n}\n\nexport default Hello;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Hello from \"./components/hello\";\n\nReactDOM.render(<Hello />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}