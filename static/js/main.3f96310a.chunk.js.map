{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","components/hello.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","Boolean","window","location","hostname","match","Stock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isSelected","state","selected","setState","index","remove","deleteStock","name","unit_value","quantity","total_value","react_default","a","createElement","type","onChange","React","Comment","_this2","i","console","log","arr","stocks","splice","deleteStocks","selectedItems","total","stocksSum","s","parseFloat","toFixed","sum","indexOf","push","filter","item","renderNormal","className","children","style","border","map","eachStock","assertThisInitialized","onClick","renderForm","ref","defaultValue","save","editing","text","hello_Stock","key","Board","_this3","add","comments","Comments","removeComment","updateComment","newText","hello_Comment","deleteComment","updateCommentText","bind","eachComment","Hello","hello_Board","ReactDOM","render","hello","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f96310a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport \"./portofolio.css\"\n\nclass Stock extends  React.Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            name: this.props.name,\n            unit_value: this.props.unit_value,\n            quantity: this.props.quantity,\n            total_value: this.props.total_value,\n            selected: false\n        }\n    }\n\n    isSelected = () =>\n    {\n        var isSelected = this.state.selected;\n        isSelected = !isSelected\n        this.setState({selected: isSelected})\n        this.props.selected(this.props.index)\n    }\n\n    remove = () =>\n    {\n        this.props.deleteStock(this.props.index)\n    }\n\n    render(){\n        return (\n         <tr>\n           <td>{this.state.name}</td>\n           <td>{this.state.unit_value}</td>\n           <td>{this.state.quantity}</td>\n           <td>{this.state.total_value}</td>\n           <td><input type={'radio'} onChange={this.isSelected}/></td>\n         </tr>\n        )\n    }\n\n}\n\nclass Comment extends React.Component{\n\n    constructor(props)\n    {\n        super(props);\n\n        let sum = () =>{\n            let stocksSum = 0.0\n            let stocks = this.props.stocks\n            console.log(stocks)\n            for(let s in stocks)\n            {\n                stocksSum = stocksSum + stocks[s]['total_value']\n            }\n\n            return parseFloat(stocksSum).toFixed(2);\n        }\n\n        this.state = {\n            editing: false,\n            selected: [],\n            stocks: this.props.stocks,\n\n            total: sum()\n        }\n\n    }\n\n    deleteStock = (i) => {\n\n        console.log(\"Removing stock: \"+i)\n        var arr = this.state.stocks;\n        arr.splice(i,1)\n        this.setState({stocks: arr})\n\n    }\n    deleteStocks = () =>\n    {\n        let selectedItems = this.state.selected\n        console.log(\"this items to remove\")\n        console.log(selectedItems)\n        let stocks = this.state.stocks\n        for (let a in selectedItems)\n        {\n            //stocks.splice(selectedItems[a]-a,1)\n            this.deleteStock(selectedItems[a]-a)\n            console.log(\"removed: \"+selectedItems[a])\n        }\n\n        //this.setState({stocks: stocks})\n\n        console.log(\"stocks after removal:\")\n        console.log(stocks)\n\n        let sum = () =>{\n            let stocksSum = 0.0\n            let stocks = this.state.stocks\n            for(let s in stocks)\n            {\n                stocksSum = stocksSum + stocks[s]['total_value']\n            }\n\n            return parseFloat(stocksSum).toFixed(2);\n        }\n\n        this.setState({total: sum()})\n\n    }\n\n    remove = () =>\n    {\n        //this.props.deleteComment(this.props.index)\n\n    };\n\n    selected = (i) => {\n\n        let arr = this.state.selected\n        if (arr.indexOf(i) == -1)\n        {\n            arr.push(i)\n        }\n        else\n        {\n            arr = arr.filter(item => item !== i)\n        }\n\n        this.setState({selected: arr})\n\n        console.log(arr)\n    }\n\n    eachStock(text,i)\n    {\n        return (<Stock key={i} index={i}\n                         name={text['name']} unit_value={text['unit_value']} quantity={text['quantity']}\n                       total_value={text['total_value']} selected={this.selected} remove={this.deleteStock}\n        ></Stock>)\n    }\n    renderNormal = () =>\n    {\n        const style = {\n\n            border_bottom: '1px solid #ddd'\n\n        };\n        return (\n            <div className={'portofolio'}>\n                <div> {this.props.children}\n                    <div className={'divider'}></div>\n                    <label>Show in €</label>\n                    <div className={'divider'}></div>\n                    <label>Show in $</label>\n                </div>\n                <p/>\n\n              <table style={{border: '1px solid black'}}>\n                  <tbody>\n                  <tr style={{border: '1px solid black'}}>\n                      <th>Name</th>\n                      <th>Unit value</th>\n                      <th>Quantity</th>\n                      <th>Total value</th>\n                      <th>Select</th>\n                  </tr>\n                    {\n                        this.state.stocks.map(this.eachStock,this)\n                    }\n                  </tbody>\n              </table>\n                <p/>\n                <p>Total value of {this.props.children} is {this.state.total}</p>\n                <button>Add Stock</button>\n                <div className={'divider'}></div>\n                <button>Perf graph</button>\n                <div className={'divider'}></div>\n                <button onClick={this.deleteStocks}>Remove selected</button>\n            </div>\n        )\n\n    }\n\n    renderForm = () =>\n    {\n        return (\n            <div>\n              <textarea ref=\"newText\" defaultValue={this.props.children}/>\n              <button onClick={this.save}>Save</button>\n            </div>\n        )\n    }\n\n  render(){\n\n      if(this.state.editing)\n      {\n        return this.renderForm()\n      }\n      else\n        return this.renderNormal()\n\n  }\n}\n\nclass Board extends  React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: [{name: 'portofolio1', stocks: [\n                    {name: 'stock11', unit_value: 1.1, quantity: 1, total_value: 1.1},\n                    {name: 'stock12', unit_value: 1.2, quantity: 1, total_value: 1.2},\n                    {name: 'stock13', unit_value: 1.3, quantity: 1, total_value: 1.3}\n                ]\n            },\n                {name: 'portofolio2', stocks: [\n                        {name: 'stock21', unit_value: 1.1, quantity: 1, total_value: 1.1},\n                        {name: 'stock22', unit_value: 1.2, quantity: 1, total_value: 1.2},\n                        {name: 'stock23', unit_value: 1.3, quantity: 1, total_value: 1.3}\n                    ]\n                },\n                {name: 'portofolio3', stocks: [\n                        {name: 'stock31', unit_value: 1.1, quantity: 1, total_value: 1.1},\n                        {name: 'stock32', unit_value: 1.2, quantity: 1, total_value: 1.2},\n                        {name: 'stock33', unit_value: 1.3, quantity: 1, total_value: 1.3}\n                    ]\n                }\n\n            ]\n        }\n    }\n    add = (text) =>\n    {\n        var arr = this.state.comments;\n        arr.push(text)\n        this.setState({Comments: arr})\n\n    }\n    removeComment = (i) =>\n    {\n        console.log(\"Removing comment \"+i)\n        var arr = this.state.comments;\n        arr.splice(i,1)\n        this.setState({Comments: arr})\n    }\n\n    updateComment = (newText,i) =>\n    {\n        var arr = this.state.comments;\n        arr[i] = newText\n        this.setState({comments: arr})\n\n    }\n\n\n    eachComment(text,i)\n    {\n        //console.log(text['stocks'])\n        return (<Comment key={i} index={i}\n                         deleteComment={this.removeComment}\n                         stocks={text['stocks']}\n                         updateCommentText={this.updateComment}>{text['name']}</Comment>)\n    }\n\n    render ()\n    {\n        return (\n            <div>\n                <button onClick={this.add.bind(null,\"Default\")}>add</button>\n                {\n                    this.state.comments.map(this.eachComment,this)\n                }\n            </div>\n        )\n    }\n}\n\nclass Hello extends React.Component {\n  render() {\n    return (\n        <div>\n\n            <Board/>\n\n        </div>\n              );\n  }\n}\n\nexport default Hello;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Hello from \"./components/hello\";\n\nReactDOM.render(<Hello />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}